#
# WARNING:
# This file is under CM control - all manual changes will be removed
#

# ----- Default configuration

READNULLCMD=${PAGER:-/usr/bin/pager}

# An array to note missing features to ease diagnosis in case of problems.
typeset -ga debian_missing_features

if [[ -z "$DEBIAN_PREVENT_KEYBOARD_CHANGES" ]] &&
   [[ "$TERM" != 'emacs' ]]
then

    typeset -A key
    key=(
        Home     "${terminfo[khome]}"
        End      "${terminfo[kend]}"
        Insert   "${terminfo[kich1]}"
        Delete   "${terminfo[kdch1]}"
        Up       "${terminfo[kcuu1]}"
        Down     "${terminfo[kcud1]}"
        Left     "${terminfo[kcub1]}"
        Right    "${terminfo[kcuf1]}"
        PageUp   "${terminfo[kpp]}"
        PageDown "${terminfo[knp]}"
    )

    function bind2maps () {
        local i sequence widget
        local -a maps

        while [[ "$1" != "--" ]]; do
            maps+=( "$1" )
            shift
        done
        shift

        sequence="${key[$1]}"
        widget="$2"

        [[ -z "$sequence" ]] && return 1

        for i in "${maps[@]}"; do
            bindkey -M "$i" "$sequence" "$widget"
        done
    }

    bind2maps emacs             -- Home   beginning-of-line
    bind2maps       viins vicmd -- Home   vi-beginning-of-line
    bind2maps emacs             -- End    end-of-line
    bind2maps       viins vicmd -- End    vi-end-of-line
    bind2maps emacs viins       -- Insert overwrite-mode
    bind2maps             vicmd -- Insert vi-insert
    bind2maps emacs             -- Delete delete-char
    bind2maps       viins vicmd -- Delete vi-delete-char
    bind2maps emacs viins vicmd -- Up     up-line-or-history
    bind2maps emacs viins vicmd -- Down   down-line-or-history
    bind2maps emacs             -- Left   backward-char
    bind2maps       viins vicmd -- Left   vi-backward-char
    bind2maps emacs             -- Right  forward-char
    bind2maps       viins vicmd -- Right  vi-forward-char

    # Make sure the terminal is in application mode, when zle is
    # active. Only then are the values from $terminfo valid.
    if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
        function zle-line-init () {
            printf '%s' ${terminfo[smkx]}
        }
        function zle-line-finish () {
            printf '%s' ${terminfo[rmkx]}
        }
        zle -N zle-line-init
        zle -N zle-line-finish
    else
        for i in {s,r}mkx; do
            (( ${+terminfo[$i]} )) || debian_missing_features+=($i)
        done
        unset i
    fi

    unfunction bind2maps

fi # [[ -z "$DEBIAN_PREVENT_KEYBOARD_CHANGES" ]] && [[ "$TERM" != 'emacs' ]]

zstyle ':completion:*:sudo:*' command-path /usr/local/sbin \
                                           /usr/local/bin  \
                                           /usr/sbin       \
                                           /usr/bin        \
                                           /sbin           \
                                           /bin            \
                                           /usr/X11R6/bin

(( ${+aliases[run-help]} )) && unalias run-help
autoload -Uz run-help

# If you don't want compinit called here, place the line
# skip_global_compinit=1
# in your $ZDOTDIR/.zshenv or $ZDOTDIR/.zprofice
if [[ -z "$skip_global_compinit" ]]; then
  autoload -U compinit
  compinit
fi

# ----- Custom configuration

export TZ=Europe/Moscow

HISTFILE=~/.zhistory
HISTSIZE=10000
SAVEHIST=10000
fc -R $HISTFILE
LISTMAX=0

# -----/ Some colors /-----
export red=$'%{\e[0;31m%}'
export RED=$'%{\e[1;31m%}'
export green=$'%{\e[0;32m%}'
export GREEN=$'%{\e[1;32m%}'
export blue=$'%{\e[0;34m%}'
export BLUE=$'%{\e[1;34m%}'
export purple=$'%{\e[0;35m%}'
export PURPLE=$'%{\e[1;35m}'
export cyan=$'%{\e[0;36m%}'
export CYAN=$'%{\e[1;36m}'
export WHITE=$'%{\e[1;37m}'
export white=$'%{\e[0;37m}'
export NC=$'%{\e[0m%}'
export yellow=$'%{\e[0;33m%}'

## color completion
zmodload -i zsh/complist

# autoloads
autoload -U compinit
compinit

autoload -U colors
colors

autoload zsh/terminfo

export PS1 NLSPATH PAGER MAIL LS_COLORS LS_OPTIONS LIBRARY_PATH \
    C_INCLUDE_PATH CPLUS_INCLUDE_PATH EDITOR TERM XFILESEARCHPATH # экспортируем всякие полезности

# uid format prompt
if [[ $EUID == 0 ]]; then
    PS1=$'%{\e[1;30m%}[%T]%{\e[1;32m%}#%h %{\e[1;31m%}%n@%m: %~\n#%{\e[0m%} ';
else
    PS1=$'%{\e[1;30m%}[%T]%{\e[1;31m%}#%h %{\e[1;32m%}%n@%m: %{\e[1;34m%}%~%{\e[00m%}\n>%{\e[0m%} ';
fi

PROMPT=$PS1;

alias mv='mv -i'
alias cp='cp -iRp'
alias rm='rm -i'
case `uname` in
    Linux)
        alias lsa='ls -lAhF --group-directories-first --color=auto'
        ;;
    FreeBSD)
        alias lsa='ls -lAhFG'
        case $TERM in
            *xterm*|(u)rxvt|(u|dt|k|E)term)
                bindkey '\e[1~' beginning-of-line
                bindkey '\e[3~' delete-char
                bindkey '\e[4~' end-of-line
                bindkey '\177' backward-delete-char
                bindkey '\e[2~' overwrite-mode
                
                bindkey "\e[7~" beginning-of-line
                bindkey "\e[H" beginning-of-line
                bindkey "\e[2~" transpose-words
                bindkey "\e[8~" end-of-line
                bindkey "\e[F" end-of-line
                ;;
        esac
        ;;
esac
alias ispell='ispell -d russian'
alias -g G='|egrep --color=always -n'
alias -g GR='egrep --color=always -R -n'
alias em="emacs --no-desktop -nw "
alias scr="byobu"
alias x="extract"

# ls settings (this is used for completion stuff)
export LS_COLORS='no=00:fi=00:di=01;33:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jpg=01;35:*.png=01;35:*.gif=01;35:*.bmp=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.png=01;35:*.mpg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:';

# EMACS mode edit current line
autoload edit-command-line
zle -N edit-command-line
bindkey '^Xe' edit-command-line

manpath="/usr/man:/usr/share/man:\
/usr/local/man:/usr/X11R6/man:/opt/qt/doc"
export MANPATH

function extract () {
  for FILE in $*
  do
    if [[ -f "$FILE" ]]; then
        case "$FILE" in
            *.tbz2 | *.tar.bz2) tar -xvjf  "$FILE" ;;
            *.txz | *.tar.xz)   tar -xvJf  "$FILE" ;;
            *.tgz | *.tar.gz)   tar -xvzf  "$FILE" ;;
            *.tar | *.cbt)      tar -xvf   "$FILE" ;;
            *.zip | *.cbz)      unzip      "$FILE" ;;
            *.rar | *.cbr)      unrar x    "$FILE" ;;
            *.arj)              unarj x    "$FILE" ;;
            *.ace)              unace x    "$FILE" ;;
            *.bz2)              bunzip2    "$FILE" ;;
            *.xz)               unxz       "$FILE" ;;
            *.gz)               gunzip     "$FILE" ;;
            *.7z)               7zr x      "$FILE" ;;
            *.Z)                uncompress "$FILE"     ;;
            *.gpg)       gpg2 -d "$FILE" | tar -xvzf - ;;
            *) echo 'Error: failed to extract "'$FILE'"' ;;
        esac
    else
        echo 'Error: "'$FILE'" is not a valid file for extraction'
    fi
  done
}

# Auto-rehashing. Try command completion, if fails, rehash
function compctl_rehash { rehash; reply=() }
compctl -C -c + -K compctl_rehash + -c

# --------/ Completion stuff /--------

# ls settings (this is used for completion stuff)
export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:';

# autocomplete

compctl -k "(add delete draft edit list import preview publish update)" nb

zstyle ":completion:*" completer _complete _match _approximate
#  * Allow approximate
zstyle ":completion:*:match:*" original only
zstyle ":completion:*:approximate:*" max-errors 1 numeric
#  * Selection prompt as menu
zstyle ":completion:*" menu select=1
#  * Menu selection for PID completion
zstyle ":completion:*:*:kill:*" menu yes select
zstyle ":completion:*:kill:*" force-list always
zstyle ":completion:*:processes" command "ps -au$USER"
zstyle ":completion:*:*:kill:*:processes" list-colors "=(#b) #([0-9]#)*=0=01;32"
#  * Don't select parent dir on cd
zstyle ":completion:*:cd:*" ignore-parents parent pwd

zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

setopt \
        print_exit_value \
        append_history \
        bang_hist \
        csh_junkie_history \
        extended_history \
        hist_allow_clobber \
        hist_beep \
        hist_ignore_dups \
        hist_ignore_all_dups \
        hist_ignore_space \
     NO_hist_no_store \
        hist_verify \
        inc_append_history \
        zle
#     NO_all_export \
#        always_last_prompt \
#     NO_always_to_end \
#     NO_auto_cd \
#        auto_list \
#        auto_menu \
#     NO_auto_name_dirs \
#        auto_param_keys \
#        auto_param_slash \
#        auto_pushd \
#        auto_remove_slash \
#     NO_auto_resume \
#        bad_pattern \
#     NO_beep \
#        brace_ccl \
#        correct_all \
#     NO_bsd_echo \
#        cdable_vars \
#     NO_chase_links \
#     NO_clobber \
#        complete_aliases \
#        complete_in_word \
#     correct \
#     NO_correct_all \
#     NO_csh_junkie_loops \
#     NO_csh_junkie_quotes \
#     NO_csh_null_glob \
#        equals \
#        extended_glob \
#        function_argzero \
#        glob \
#     NO_glob_assign \
#        glob_complete \
#     NO_glob_dots \
#        glob_subst \
#        hash_cmds \
#        hash_dirs \
#        hash_list_all \
#     NO_hup \
#     NO_ignore_braces \
#     NO_ignore_eof \
#        interactive_comments \
#     NO_list_ambiguous \
#     NO_list_beep \
#        list_types \
#        long_list_jobs \
#        magic_equal_subst \
#     NO_mail_warning \
#     NO_mark_dirs \
#     NO_menu_complete \
#        multios \
#        nomatch \
#        notify \
#     NO_null_glob \
#        numeric_glob_sort \
#     NO_overstrike \
#        path_dirs \
#        posix_builtins \
#        prompt_cr \
#        prompt_subst \
#        pushd_ignore_dups \
#     NO_pushd_minus \
#        pushd_silent \
#        pushd_to_home \
#        rc_expand_param \
#     NO_rc_quotes \
#     NO_rm_star_silent \
#     NO_sh_file_expansion \
#        sh_option_letters \
#        short_loops \
#     NO_sh_word_split \
#     NO_single_line_zle \
#     NO_sun_keyboard_hack \
#        unset \
#     NO_verbose \
